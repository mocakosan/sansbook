{"ast":null,"code":"import shortId from \"shortid\";\nimport produce from \"immer\";\nimport { faker } from \"@faker-js/faker\";\nimport { combineReducers } from \"redux\";\nimport { HYDRATE } from \"next-redux-wrapper\";\nfaker.seed(123);\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null\n};\n\n// export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [\n//         {\n//           src: faker.image.image(),\n//         },\n//       ],\n//       Comments: [\n//         {\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n\n// export const initialState = {\n//   mainPosts: [\n//     {\n//       id: 1,\n//       User: {\n//         id: 1,\n//         nickname: \"제로초\",\n//       },\n//       content: \"첫 번째 게시글 #해시태그 #jangsan\",\n//       Images: [\n//         {\n//           id: shortId.generate(),\n//           src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\",\n//         },\n//         {\n//           id: shortId.generate(),\n//           src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\",\n//         },\n//         {\n//           id: shortId.generate(),\n//           src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\n//         },\n//       ],\n//       Comments: [\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: \"nero\",\n//           },\n//           content: \"우와 개정판이 나왔군요~\",\n//         },\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: \"hero\",\n//           },\n//           content: \"얼른 사고싶어요~\",\n//         },\n//       ],\n//     },\n//   ],\n//   imagePaths: [],\n//   addPostLoading: false,\n//   addPostDone: false,\n//   addPostError: null,\n//   removePostLoading: false,\n//   removePostDone: false,\n//   removePostError: null,\n//   addCommentLoading: false,\n//   addCommentDone: false,\n//   addCommentError: null,\n// };\nexport var LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport var LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport var LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport var UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport var UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport var UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport var LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\nexport var LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\nexport var LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\nexport var LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport var LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport var LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport var UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport var UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport var RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport var RETWEET_FAILURE = \"RETWEET_FAILURE\";\nexport var REMOVE_IMAGE = \"REMOVE_IMAGE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addCommnet = function addCommnet(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\n// const dummyPost = (data) => ({\n//   id: data.id,\n//   content: data.content,\n//   User: {\n//     id: 1,\n//     nickname: \"제로초\",\n//   },\n//   Images: [],\n//   Comments: [],\n// });\n// const dummyComment = (data) => ({\n//   id: shortId.generate(),\n//   content: data,\n//   User: {\n//     id: 1,\n//     nickname: \"제로초\",\n//   },\n// });\n\n//reducer : 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n      case LIKE_POST_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Likers.push({\n            id: action.data.userId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          _post.Likers = _post.Likers.filter(function (v) {\n            return v.id !== action.data.userId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          _post2.Comments.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n          // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n};\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","combineReducers","HYDRATE","seed","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","uploadImagesLoading","uploadImagesDone","uploadImagesError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","retweetLoading","retweetDone","retweetError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","addPost","data","type","addCommnet","reducer","state","arguments","length","undefined","action","draft","unshift","error","post","find","v","id","PostId","Likers","push","userId","filter","singlePost","concat","i","Comments"],"sources":["/Users/js/Desktop/sansbook/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\nimport produce from \"immer\";\nimport { faker } from \"@faker-js/faker\";\nimport { combineReducers } from \"redux\";\nimport { HYDRATE } from \"next-redux-wrapper\";\nfaker.seed(123);\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null,\n};\n\n// export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [\n//         {\n//           src: faker.image.image(),\n//         },\n//       ],\n//       Comments: [\n//         {\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n\n// export const initialState = {\n//   mainPosts: [\n//     {\n//       id: 1,\n//       User: {\n//         id: 1,\n//         nickname: \"제로초\",\n//       },\n//       content: \"첫 번째 게시글 #해시태그 #jangsan\",\n//       Images: [\n//         {\n//           id: shortId.generate(),\n//           src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\",\n//         },\n//         {\n//           id: shortId.generate(),\n//           src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\",\n//         },\n//         {\n//           id: shortId.generate(),\n//           src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\n//         },\n//       ],\n//       Comments: [\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: \"nero\",\n//           },\n//           content: \"우와 개정판이 나왔군요~\",\n//         },\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: \"hero\",\n//           },\n//           content: \"얼른 사고싶어요~\",\n//         },\n//       ],\n//     },\n//   ],\n//   imagePaths: [],\n//   addPostLoading: false,\n//   addPostDone: false,\n//   addPostError: null,\n//   removePostLoading: false,\n//   removePostDone: false,\n//   removePostError: null,\n//   addCommentLoading: false,\n//   addCommentDone: false,\n//   addCommentError: null,\n// };\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\n\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\n\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\n\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\n\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\nexport const addCommnet = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\n// const dummyPost = (data) => ({\n//   id: data.id,\n//   content: data.content,\n//   User: {\n//     id: 1,\n//     nickname: \"제로초\",\n//   },\n//   Images: [],\n//   Comments: [],\n// });\n// const dummyComment = (data) => ({\n//   id: shortId.generate(),\n//   content: data,\n//   User: {\n//     id: 1,\n//     nickname: \"제로초\",\n//   },\n// });\n\n//reducer : 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n      case RETWEET_SUCCESS: {\n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      }\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n      case LIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers.push({ id: action.data.userId });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n      case UNLIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.userId);\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;\n      }\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n      case UPLOAD_IMAGES_SUCCESS: {\n        draft.imagePaths = action.data;\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(\n          (v) => v.id !== action.data.PostId\n        );\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n        // const post = { ...state.mainPosts[postIndex] };\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        // return {\n        //   ...state,\n        //   mainPosts,\n        //   addCommentLoading: false,\n        //   addCommentDone: true,\n        // };\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}