{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/sansbook/pages/hashtag/[tag].js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { END } from \"redux-saga\";\nimport axios from \"axios\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../../reducers/post\";\nimport PostCard from \"../../components/PostCard\";\nimport wrapper from \"../../store/configureStore\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport AppLayout from \"../../components/AppLayout\";\nconst Hashtag = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    tag\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: tag\n          });\n        }\n      }\n    };\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, mainPosts.map(c => __jsx(PostCard, {\n    key: c.id,\n    post: c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })));\n};\n\n//SSR : next전용 서버사이드 렌더링 = 사용\nexport const getServerSideProps = wrapper.getServerSideProps(store => async context => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = cookie;\n  if (context.req && cookie) {\n    //쿠키를 써서 요청을 보냈을떄만 잠시 보관해두었다가 쿠키 안써서 요청보낼떄는 서버에서 공유하고 있는 쿠키를 제거하는\n    axios.defaults.headers.Cookie = cookie; //잘못하면 내 뒤로 로그인하는 사람이 내쿠키를 공유해서 내정보로 로그인하는 현상이 일어나서 해두는 조치\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: context.params.hashtag\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n  return {\n    props: {}\n  };\n});\nexport default Hashtag;","map":{"version":3,"names":["React","useCallback","useEffect","useDispatch","useSelector","useRouter","END","axios","LOAD_HASHTAG_POSTS_REQUEST","PostCard","wrapper","LOAD_MY_INFO_REQUEST","AppLayout","Hashtag","dispatch","router","tag","query","mainPosts","hasMorePosts","loadPostsLoading","state","post","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","c","key","getServerSideProps","store","context","cookie","req","headers","defaults","Cookie","params","hashtag","sagaTask","toPromise","props"],"sources":["/Users/js/Desktop/sansbook/pages/hashtag/[tag].js"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { END } from \"redux-saga\";\n\nimport axios from \"axios\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../../reducers/post\";\nimport PostCard from \"../../components/PostCard\";\nimport wrapper from \"../../store/configureStore\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport AppLayout from \"../../components/AppLayout\";\n\nconst Hashtag = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { tag } = router.query;\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(\n    (state) => state.post\n  );\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (\n        window.pageYOffset + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId:\n              mainPosts[mainPosts.length - 1] &&\n              mainPosts[mainPosts.length - 1].id,\n            data: tag,\n          });\n        }\n      }\n    };\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag]);\n\n  return (\n    <AppLayout>\n      {mainPosts.map((c) => (\n        <PostCard key={c.id} post={c} />\n      ))}\n    </AppLayout>\n  );\n};\n\n//SSR : next전용 서버사이드 렌더링 = 사용\nexport const getServerSideProps = wrapper.getServerSideProps(\n  (store) => async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = cookie;\n    if (context.req && cookie) {\n      //쿠키를 써서 요청을 보냈을떄만 잠시 보관해두었다가 쿠키 안써서 요청보낼떄는 서버에서 공유하고 있는 쿠키를 제거하는\n      axios.defaults.headers.Cookie = cookie; //잘못하면 내 뒤로 로그인하는 사람이 내쿠키를 공유해서 내정보로 로그인하는 현상이 일어나서 해두는 조치\n    }\n    store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    store.dispatch({\n      type: LOAD_HASHTAG_POSTS_REQUEST,\n      data: context.params.hashtag,\n    });\n\n    store.dispatch(END);\n    await store.sagaTask.toPromise();\n    return { props: {} };\n  }\n);\n\nexport default Hashtag;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}