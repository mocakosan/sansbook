{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from \"antd\";\nimport { useCallback, useEffect } from \"react\";\nimport useInput from \"./hooks/useInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const [commentText, onChaneCommentText, setCommentText] = useInput(\"\");\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        userId: id,\n        postId: post.id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment\n  }, __jsx(Form.Item, {\n    style: {\n      position: \"relative\"\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChaneCommentText,\n    rows: 4\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: {\n      position: \"absolute\",\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    loading: addCommentLoading\n  }, \"\\uC090\\uC57D\")));\n};\nexport default CommentForm;","map":null,"metadata":{},"sourceType":"module"}