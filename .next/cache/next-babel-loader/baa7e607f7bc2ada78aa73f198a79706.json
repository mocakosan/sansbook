{"ast":null,"code":"import { all, fork, takeEvery, takeLatest, call, put, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { LOG_IN_SUCCESS, LOG_OUT_SUCCESS, LOG_OUT_REQUEST, LOG_IN_REQUEST, LOG_IN_FAILURE, LOG_OUT_FAILURE, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, LOAD_MY_INFO_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, CHANGE_NICKNAME_REQUEST } from \"../reducers/user\";\n\n//all 배열안에 있는것들을 한번에 실행\n//fork 비동기 함수 호출\n//call 동기 함수 호출\n\n//Load_MY_INFO_USER : 로그인 유(새로고침해도 안풀리게)\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\");\n}\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n//LOGIN\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      //put : dispatch\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n//LOGOUT\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      //put : dispatch\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\n//SignUp\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    yield put({\n      //put : dispatch\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\n//Follow\nfunction followAPI() {\n  return axios.post(\"/follow\");\n}\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n//UnFollow\nfunction unfollowAPI() {\n  return axios.post(\"/unfollow\");\n}\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn); //take(\"LOG_IN\") : 로그인이란 액션이 실행될때까지 기다림\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n//yield take 단점 : 일회용\n//takeEvery로 while문 대체해서 반복하게 만듬\n//takeLatest 모르고 여러번 눌러도 마지막만 실행하게만듬 (중복 못하게, 보통은 takeLatest 많이함)\n//throttle 시간제한을 두고 그 시간안에는 한번만 실행\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow), fork(watchLoadMyInfo), fork(watchChangeNickname)]);\n}","map":{"version":3,"names":["all","fork","takeEvery","takeLatest","call","put","delay","axios","LOG_IN_SUCCESS","LOG_OUT_SUCCESS","LOG_OUT_REQUEST","LOG_IN_REQUEST","LOG_IN_FAILURE","LOG_OUT_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","LOAD_MY_INFO_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","CHANGE_NICKNAME_REQUEST","loadMyInfoAPI","get","loadMyInfo","result","type","data","err","console","error","response","logInAPI","post","logIn","action","logOutAPI","logOut","signUpAPI","signUp","followAPI","follow","unfollowAPI","unfollow","watchChangeNickname","changeNickname","watchLoadMyInfo","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"sources":["/Users/js/Desktop/sansbook/sagas/user.js"],"sourcesContent":["import {\n  all,\n  fork,\n  takeEvery,\n  takeLatest,\n  call,\n  put,\n  delay,\n} from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  LOG_IN_SUCCESS,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_REQUEST,\n  LOG_IN_REQUEST,\n  LOG_IN_FAILURE,\n  LOG_OUT_FAILURE,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE,\n  SIGN_UP_REQUEST,\n  FOLLOW_FAILURE,\n  FOLLOW_REQUEST,\n  FOLLOW_SUCCESS,\n  UNFOLLOW_FAILURE,\n  UNFOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS,\n  LOAD_MY_INFO_FAILURE,\n  LOAD_MY_INFO_REQUEST,\n  LOAD_MY_INFO_SUCCESS,\n  CHANGE_NICKNAME_REQUEST,\n} from \"../reducers/user\";\n\n//all 배열안에 있는것들을 한번에 실행\n//fork 비동기 함수 호출\n//call 동기 함수 호출\n\n//Load_MY_INFO_USER : 로그인 유(새로고침해도 안풀리게)\nfunction loadMyInfoAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n//LOGIN\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      //put : dispatch\n      type: LOG_IN_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n//LOGOUT\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n\n    yield put({\n      //put : dispatch\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\n//SignUp\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    yield put({\n      //put : dispatch\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      data: err.response.data,\n    });\n  }\n}\n\n//Follow\nfunction followAPI() {\n  return axios.post(\"/follow\");\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\n//UnFollow\nfunction unfollowAPI() {\n  return axios.post(\"/unfollow\");\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn); //take(\"LOG_IN\") : 로그인이란 액션이 실행될때까지 기다림\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n//yield take 단점 : 일회용\n//takeEvery로 while문 대체해서 반복하게 만듬\n//takeLatest 모르고 여러번 눌러도 마지막만 실행하게만듬 (중복 못하게, 보통은 takeLatest 많이함)\n//throttle 시간제한을 두고 그 시간안에는 한번만 실행\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchSignUp),\n    fork(watchFollow),\n    fork(watchUnfollow),\n    fork(watchLoadMyInfo),\n    fork(watchChangeNickname),\n  ]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}