{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport shortId from \"shortid\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #jangsan\",\n    Images: [{\n      src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\"\n    }, {\n      src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\"\n    }, {\n      src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"nero\"\n      },\n      content: \"우와 개정판이 나왔군요~\"\n    }, {\n      User: {\n        nickname: \"hero\"\n      },\n      content: \"얼른 사고싶어요~\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addCommnet = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\nconst dummyPost = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  },\n  Images: [],\n  Comments: []\n});\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  }\n});\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n    case ADD_POST_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(y => y.id === action.data.postId);\n        const post = _objectSpread({}, state.mainPosts[postIndex]);\n        post.comments = [dummyComment(action.data.content), ...post.Comments];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts,\n          addPostLoading: false,\n          addPostDone: true\n        });\n      }\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n    case ADD_COMMENT_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: false,\n          addCommentDone: true\n        });\n      }\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"names":["shortId","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addCommnet","dummyPost","generate","dummyComment","state","action","_objectSpread","postIndex","findIndex","y","postId","post","comments","error"],"sources":["/Users/js/Desktop/sansbook/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\n\nexport const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: \"제로초\",\n      },\n      content: \"첫 번째 게시글 #해시태그 #jangsan\",\n      Images: [\n        {\n          src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\",\n        },\n        {\n          src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\",\n        },\n        {\n          src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\n        },\n      ],\n      Comments: [\n        {\n          User: {\n            nickname: \"nero\",\n          },\n          content: \"우와 개정판이 나왔군요~\",\n        },\n        {\n          User: {\n            nickname: \"hero\",\n          },\n          content: \"얼른 사고싶어요~\",\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\nexport const addCommnet = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyPost = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"제로초\",\n  },\n  Images: [],\n  Comments: [],\n});\nconst dummyComment = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"제로초\",\n  },\n});\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return {\n        ...state,\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null,\n      };\n    case ADD_POST_SUCCESS: {\n      const postIndex = state.mainPosts.findIndex(\n        (y) => y.id === action.data.postId\n      );\n      const post = { ...state.mainPosts[postIndex] };\n      post.comments = [dummyComment(action.data.content), ...post.Comments];\n      const mainPosts = [...state.mainPosts];\n      mainPosts[postIndex] = post;\n      return {\n        ...state,\n        mainPosts,\n        addPostLoading: false,\n        addPostDone: true,\n      };\n    }\n    case ADD_POST_FAILURE:\n      return {\n        ...state,\n        addPostLoading: false,\n        addPostError: action.error,\n      };\n    case ADD_COMMENT_REQUEST:\n      return {\n        ...state,\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null,\n      };\n    case ADD_COMMENT_SUCCESS: {\n      return {\n        ...state,\n        addCommentLoading: false,\n        addCommentDone: true,\n      };\n    }\n    case ADD_COMMENT_FAILURE:\n      return {\n        ...state,\n        addCommentLoading: false,\n        addCommentError: action.error,\n      };\n    default: {\n      return {\n        ...state,\n      };\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}