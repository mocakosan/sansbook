{"ast":null,"code":"import shortId from \"shortid\";\nimport produce from \"immer\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #jangsan\",\n    Images: [{\n      id: shortId.generate(),\n      src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"nero\"\n      },\n      content: \"우와 개정판이 나왔군요~\"\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"hero\"\n      },\n      content: \"얼른 사고싶어요~\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\n\n// initialState.mainPosts = initialState.mainPosts.concat(\n//   array(20)\n//     .fill()\n//     .map((v, i) => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [\n//         {\n//           src: faker.image.image(),\n//         },\n//       ],\n//       Comments: [\n//         {\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }))\n// );\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addCommnet = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  },\n  Images: [],\n  Comments: []\n});\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  }\n});\n\n//reducer : 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.mainPosts.unshift(dummyPost(action.data));\n      break;\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n      break;\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n    case ADD_COMMENT_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n        // const post = { ...state.mainPosts[postIndex] };\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        // return {\n        //   ...state,\n        //   mainPosts,\n        //   addCommentLoading: false,\n        //   addCommentDone: true,\n        // };\n      }\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n    default:\n      break;\n  }\n});\nexport default reducer;","map":{"version":3,"names":["shortId","produce","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addCommnet","dummyPost","dummyComment","reducer","state","action","draft","unshift","error","filter","v","post","find","postId"],"sources":["/Users/js/Desktop/sansbook/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\nimport produce from \"immer\";\n\nexport const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      User: {\n        id: 1,\n        nickname: \"제로초\",\n      },\n      content: \"첫 번째 게시글 #해시태그 #jangsan\",\n      Images: [\n        {\n          id: shortId.generate(),\n          src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\",\n        },\n        {\n          id: shortId.generate(),\n          src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\",\n        },\n        {\n          id: shortId.generate(),\n          src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\n        },\n      ],\n      Comments: [\n        {\n          id: shortId.generate(),\n          User: {\n            id: shortId.generate(),\n            nickname: \"nero\",\n          },\n          content: \"우와 개정판이 나왔군요~\",\n        },\n        {\n          id: shortId.generate(),\n          User: {\n            id: shortId.generate(),\n            nickname: \"hero\",\n          },\n          content: \"얼른 사고싶어요~\",\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\n// initialState.mainPosts = initialState.mainPosts.concat(\n//   array(20)\n//     .fill()\n//     .map((v, i) => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [\n//         {\n//           src: faker.image.image(),\n//         },\n//       ],\n//       Comments: [\n//         {\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }))\n// );\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\nexport const addCommnet = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\nconst dummyPost = (data) => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"제로초\",\n  },\n  Images: [],\n  Comments: [],\n});\nconst dummyComment = (data) => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"제로초\",\n  },\n});\n\n//reducer : 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n        // const post = { ...state.mainPosts[postIndex] };\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        // return {\n        //   ...state,\n        //   mainPosts,\n        //   addCommentLoading: false,\n        //   addCommentDone: true,\n        // };\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}