{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/sansbook/components/PostForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from \"antd\";\nimport { useCallback, useRef, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\nimport useInput from \"./hooks/useInput\";\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone,\n    addPostLoading\n  } = useSelector(state => state.post);\n  const [text, onChangeText, setText] = useInput(\"\");\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  const onSubmitForm = useCallback(() => {\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append(\"image\", p);\n    });\n    formData.append(\"content\", text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log(\"images\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  const onRemoveImage = useCallback(index => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC77C\\uC774 \\uC0DD\\uACBC\\uB098\\uC694\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    loading: addPostLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"\\uC9F9\\uCA31\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: `http://localhost:3001/${v}`,\n    style: {\n      width: \"200px\"\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: onRemoveImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\nexport default PostForm;","map":{"version":3,"names":["Form","Input","Button","useCallback","useRef","useEffect","useState","useDispatch","useSelector","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","useInput","PostForm","imagePaths","addPostDone","addPostLoading","state","post","text","onChangeText","setText","dispatch","imageInput","onSubmitForm","formData","FormData","forEach","p","append","type","data","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","onRemoveImage","index","REMOVE_IMAGE","__jsx","style","margin","encType","onFinish","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","value","onChange","maxLength","placeholder","name","multiple","hidden","ref","onClick","float","htmlType","loading","map","v","key","display","src","width","alt"],"sources":["/Users/js/Desktop/sansbook/components/PostForm.js"],"sourcesContent":["import { Form, Input, Button } from \"antd\";\nimport { useCallback, useRef, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\nimport useInput from \"./hooks/useInput\";\n\nconst PostForm = () => {\n  const { imagePaths, addPostDone, addPostLoading } = useSelector(\n    (state) => state.post\n  );\n  const [text, onChangeText, setText] = useInput(\"\");\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n\n  const onSubmitForm = useCallback(() => {\n    const formData = new FormData();\n    imagePaths.forEach((p) => {\n      formData.append(\"image\", p);\n    });\n    formData.append(\"content\", text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData,\n    });\n  }, [text, imagePaths]);\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback((e) => {\n    console.log(\"images\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  }, []);\n  const onRemoveImage = useCallback((index) => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index,\n    });\n  }, []);\n  return (\n    <Form\n      style={{ margin: \"10px 0 20px\" }}\n      encType=\"multipart/form-data\"\n      onFinish={onSubmitForm}\n    >\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"어떤 일이 생겼나요\"\n      />\n      <div>\n        <input\n          type=\"file\"\n          name=\"image\"\n          multiple\n          hidden\n          ref={imageInput}\n          onChange={onChangeImages}\n        />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button\n          type=\"primary\"\n          style={{ float: \"right\" }}\n          htmlType=\"submit\"\n          loading={addPostLoading}\n        >\n          짹쨱\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map((v) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img\n              src={`http://localhost:3001/${v}`}\n              style={{ width: \"200px\" }}\n              alt={v}\n            />\n            <div>\n              <Button onClick={onRemoveImage}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}