{"ast":null,"code":"import shortId from \"shortid\";\nimport produce from \"immer\";\nimport { faker } from \"@faker-js/faker\";\nfaker.seed(123);\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\n\n// export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [\n//         {\n//           src: faker.image.image(),\n//         },\n//       ],\n//       Comments: [\n//         {\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n\n// export const initialState = {\n//   mainPosts: [\n//     {\n//       id: 1,\n//       User: {\n//         id: 1,\n//         nickname: \"제로초\",\n//       },\n//       content: \"첫 번째 게시글 #해시태그 #jangsan\",\n//       Images: [\n//         {\n//           id: shortId.generate(),\n//           src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\",\n//         },\n//         {\n//           id: shortId.generate(),\n//           src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\",\n//         },\n//         {\n//           id: shortId.generate(),\n//           src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\n//         },\n//       ],\n//       Comments: [\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: \"nero\",\n//           },\n//           content: \"우와 개정판이 나왔군요~\",\n//         },\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: \"hero\",\n//           },\n//           content: \"얼른 사고싶어요~\",\n//         },\n//       ],\n//     },\n//   ],\n//   imagePaths: [],\n//   addPostLoading: false,\n//   addPostDone: false,\n//   addPostError: null,\n//   removePostLoading: false,\n//   removePostDone: false,\n//   removePostError: null,\n//   addCommentLoading: false,\n//   addCommentDone: false,\n//   addCommentError: null,\n// };\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addCommnet = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\n// const dummyPost = (data) => ({\n//   id: data.id,\n//   content: data.content,\n//   User: {\n//     id: 1,\n//     nickname: \"제로초\",\n//   },\n//   Images: [],\n//   Comments: [],\n// });\n// const dummyComment = (data) => ({\n//   id: shortId.generate(),\n//   content: data,\n//   User: {\n//     id: 1,\n//     nickname: \"제로초\",\n//   },\n// });\n\n//reducer : 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LIKE_POST_REQUEST:\n      draft.likePostLoading = true;\n      draft.likePostDone = false;\n      draft.likePostError = null;\n      break;\n    case LIKE_POST_SUCCESS:\n      {\n        var _draft$singlePost;\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        if (post) {\n          post.Likers.push({\n            id: action.data.userId\n          });\n        }\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        if ((_draft$singlePost = draft.singlePost) !== null && _draft$singlePost !== void 0 && _draft$singlePost.Likers) {\n          draft.singlePost.Likers.push({\n            id: action.data.userId\n          });\n        }\n        break;\n      }\n    case LIKE_POST_FAILURE:\n      draft.likePostLoading = false;\n      draft.likePostError = action.error;\n      break;\n    case UNLIKE_POST_REQUEST:\n      draft.unlikePostLoading = true;\n      draft.unlikePostDone = false;\n      draft.unlikePostError = null;\n      break;\n    case UNLIKE_POST_SUCCESS:\n      {\n        var _draft$singlePost2;\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        if (post) {\n          post.Likers = post.Likers.filter(v => v.id !== action.data.userId);\n        }\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        if ((_draft$singlePost2 = draft.singlePost) !== null && _draft$singlePost2 !== void 0 && _draft$singlePost2.Likers) {\n          const index = draft.singlePost.Likers.find(v => v.id === action.data.userId);\n          draft.singlePost.Likers.splice(index, 1);\n        }\n        break;\n      }\n    case UNLIKE_POST_FAILURE:\n      draft.unlikePostLoading = false;\n      draft.unlikePostError = action.error;\n      break;\n    case LOAD_POST_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n    case LOAD_POST_SUCCESS:\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.singlePost = action.data;\n      break;\n    case LOAD_POST_FAILURE:\n      draft.loadPostLoading = false;\n      draft.loadPostError = action.error;\n      break;\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      break;\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.mainPosts = action.data.concat(draft.mainPosts);\n      draft.hasMorePosts = draft.mainPosts.length < 50;\n      break;\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.mainPosts.unshift(action.data);\n      break;\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n      break;\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n    case ADD_COMMENT_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n        // const post = { ...state.mainPosts[postIndex] };\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        // return {\n        //   ...state,\n        //   mainPosts,\n        //   addCommentLoading: false,\n        //   addCommentDone: true,\n        // };\n      }\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n    default:\n      break;\n  }\n});\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","seed","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addCommnet","reducer","state","action","draft","_draft$singlePost","post","find","v","id","PostId","Likers","push","userId","singlePost","error","_draft$singlePost2","filter","index","splice","concat","length","unshift","Comments"],"sources":["/Users/js/Desktop/sansbook/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\nimport produce from \"immer\";\nimport { faker } from \"@faker-js/faker\";\nfaker.seed(123);\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n};\n\n// export const generateDummyPost = (number) =>\n//   Array(number)\n//     .fill()\n//     .map(() => ({\n//       id: shortId.generate(),\n//       User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//       },\n//       content: faker.lorem.paragraph(),\n//       Images: [\n//         {\n//           src: faker.image.image(),\n//         },\n//       ],\n//       Comments: [\n//         {\n//           User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//           },\n//           content: faker.lorem.sentence(),\n//         },\n//       ],\n//     }));\n\n// export const initialState = {\n//   mainPosts: [\n//     {\n//       id: 1,\n//       User: {\n//         id: 1,\n//         nickname: \"제로초\",\n//       },\n//       content: \"첫 번째 게시글 #해시태그 #jangsan\",\n//       Images: [\n//         {\n//           id: shortId.generate(),\n//           src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\",\n//         },\n//         {\n//           id: shortId.generate(),\n//           src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\",\n//         },\n//         {\n//           id: shortId.generate(),\n//           src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\n//         },\n//       ],\n//       Comments: [\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: \"nero\",\n//           },\n//           content: \"우와 개정판이 나왔군요~\",\n//         },\n//         {\n//           id: shortId.generate(),\n//           User: {\n//             id: shortId.generate(),\n//             nickname: \"hero\",\n//           },\n//           content: \"얼른 사고싶어요~\",\n//         },\n//       ],\n//     },\n//   ],\n//   imagePaths: [],\n//   addPostLoading: false,\n//   addPostDone: false,\n//   addPostError: null,\n//   removePostLoading: false,\n//   removePostDone: false,\n//   removePostError: null,\n//   addCommentLoading: false,\n//   addCommentDone: false,\n//   addCommentError: null,\n// };\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\n\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\n\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\n\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const addPost = (data) => ({\n  type: ADD_POST_REQUEST,\n  data,\n});\nexport const addCommnet = (data) => ({\n  type: ADD_COMMENT_REQUEST,\n  data,\n});\n\n// const dummyPost = (data) => ({\n//   id: data.id,\n//   content: data.content,\n//   User: {\n//     id: 1,\n//     nickname: \"제로초\",\n//   },\n//   Images: [],\n//   Comments: [],\n// });\n// const dummyComment = (data) => ({\n//   id: shortId.generate(),\n//   content: data,\n//   User: {\n//     id: 1,\n//     nickname: \"제로초\",\n//   },\n// });\n\n//reducer : 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\nconst reducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n      case LIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        if (post) {\n          post.Likers.push({ id: action.data.userId });\n        }\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        if (draft.singlePost?.Likers) {\n          draft.singlePost.Likers.push({ id: action.data.userId });\n        }\n        break;\n      }\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n      case UNLIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        if (post) {\n          post.Likers = post.Likers.filter((v) => v.id !== action.data.userId);\n        }\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        if (draft.singlePost?.Likers) {\n          const index = draft.singlePost.Likers.find(\n            (v) => v.id === action.data.userId\n          );\n          draft.singlePost.Likers.splice(index, 1);\n        }\n        break;\n      }\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n        // const post = { ...state.mainPosts[postIndex] };\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        // return {\n        //   ...state,\n        //   mainPosts,\n        //   addCommentLoading: false,\n        //   addCommentDone: true,\n        // };\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n\nexport default reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}