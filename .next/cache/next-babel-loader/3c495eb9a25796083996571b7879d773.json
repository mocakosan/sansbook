{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { END } from \"redux-saga\";\nimport axios from \"axios\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport wrapper from \"../../store/configureStore\";\nimport PostCard from \"../../components/PostCard\";\nimport AppLayout from \"../../components/AppLayout\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nconst Post = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n\n  // if (router.isFallback) {\n  //   return <div>Loading...</div>;\n  // }\n\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, singlePost === null || singlePost === void 0 ? void 0 : singlePost.user.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost === null || singlePost === void 0 ? void 0 : singlePost.content\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${singlePost === null || singlePost === void 0 ? void 0 : singlePost.user.nickname}님의 게시글`\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: singlePost === null || singlePost === void 0 ? void 0 : singlePost.content\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: singlePost !== null && singlePost !== void 0 && singlePost.Images[0] ? singlePost === null || singlePost === void 0 ? void 0 : singlePost.Images[0].src : \"https://nodebird.com/favicon.ico\"\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `https://nodebird.com/post/${id}`\n  })), __jsx(PostCard, {\n    post: singlePost\n  }));\n};\n\n//SSR : next전용 서버사이드 렌더링 = 사용\nexport const getServerSideProps = wrapper.getServerSideProps(store => async context => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n  if (context.req && cookie) {\n    //쿠키를 써서 요청을 보냈을떄만 잠시 보관해두었다가 쿠키 안써서 요청보낼떄는 서버에서 공유하고 있는 쿠키를 제거하는\n    axios.defaults.headers.Cookie = cookie; //잘못하면 내 뒤로 로그인하는 사람이 내쿠키를 공유해서 내정보로 로그인하는 현상이 일어나서 해두는 조치\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n  return {\n    props: {}\n  };\n});\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}