{"ast":null,"code":"var _jsxFileName = \"/Users/js/Desktop/sansbook/pages/post/[id].js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n};\n\n//SSR : next전용 서버사이드 렌더링 = 사용\nexport const getServerSideProps = wrapper.getServerSideProps(store => async context => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = cookie;\n  if (context.req && cookie) {\n    //쿠키를 써서 요청을 보냈을떄만 잠시 보관해두었다가 쿠키 안써서 요청보낼떄는 서버에서 공유하고 있는 쿠키를 제거하는\n    axios.defaults.headers.Cookie = cookie; //잘못하면 내 뒤로 로그인하는 사람이 내쿠키를 공유해서 내정보로 로그인하는 현상이 일어나서 해두는 조치\n  }\n\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"names":["React","useRouter","LOAD_POST_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","axios","END","Post","router","id","query","__jsx","AppLayout","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","PostCard","post","singlePost","getServerSideProps","store","context","cookie","req","headers","defaults","Cookie","dispatch","type","data","params","sagaTask","toPromise"],"sources":["/Users/js/Desktop/sansbook/pages/post/[id].js"],"sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport wrapper from \"../../store/configureStore\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\n\nconst Post = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  return (\n    <AppLayout>\n      <PostCard post={singlePost} />\n    </AppLayout>\n  );\n};\n\n//SSR : next전용 서버사이드 렌더링 = 사용\nexport const getServerSideProps = wrapper.getServerSideProps(\n  (store) => async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = cookie;\n    if (context.req && cookie) {\n      //쿠키를 써서 요청을 보냈을떄만 잠시 보관해두었다가 쿠키 안써서 요청보낼떄는 서버에서 공유하고 있는 쿠키를 제거하는\n      axios.defaults.headers.Cookie = cookie; //잘못하면 내 뒤로 로그인하는 사람이 내쿠키를 공유해서 내정보로 로그인하는 현상이 일어나서 해두는 조치\n    }\n    store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    store.dispatch({\n      type: LOAD_POST_REQUEST,\n      data: context.params.id,\n    });\n    store.dispatch(END);\n    await store.sagaTask.toPromise();\n  }\n);\n\nexport default Post;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,oBAAoB,QAAQ,qBAAqB;AAC1D,OAAOC,OAAO,MAAM,4BAA4B;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,YAAY;AAEhC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAMC,MAAM,GAAGP,SAAS,EAAE;EAC1B,MAAM;IAAEQ;EAAG,CAAC,GAAGD,MAAM,CAACE,KAAK;EAC3B,OACEC,KAAA,CAACC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACRP,KAAA,CAACQ,QAAQ;IAACC,IAAI,EAAEC,UAAW;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CACpB;AAEhB,CAAC;;AAED;AACA,OAAO,MAAMI,kBAAkB,GAAGlB,OAAO,CAACkB,kBAAkB,CACzDC,KAAK,IAAK,MAAOC,OAAO,IAAK;EAC5B,MAAMC,MAAM,GAAGD,OAAO,CAACE,GAAG,GAAGF,OAAO,CAACE,GAAG,CAACC,OAAO,CAACF,MAAM,GAAG,EAAE;EAC5DpB,KAAK,CAACuB,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAGJ,MAAM;EACtC,IAAID,OAAO,CAACE,GAAG,IAAID,MAAM,EAAE;IACzB;IACApB,KAAK,CAACuB,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAGJ,MAAM,CAAC,CAAC;EAC1C;;EACAF,KAAK,CAACO,QAAQ,CAAC;IACbC,IAAI,EAAE5B;EACR,CAAC,CAAC;EACFoB,KAAK,CAACO,QAAQ,CAAC;IACbC,IAAI,EAAE7B,iBAAiB;IACvB8B,IAAI,EAAER,OAAO,CAACS,MAAM,CAACxB;EACvB,CAAC,CAAC;EACFc,KAAK,CAACO,QAAQ,CAACxB,GAAG,CAAC;EACnB,MAAMiB,KAAK,CAACW,QAAQ,CAACC,SAAS,EAAE;AAClC,CAAC,CACF;AAED,eAAe5B,IAAI"},"metadata":{},"sourceType":"module"}