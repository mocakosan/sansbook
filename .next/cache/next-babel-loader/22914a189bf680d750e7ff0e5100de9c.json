{"ast":null,"code":"import { applyMiddleware, createStore, compose } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\nimport rootReducer from \"../reducers\";\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\nconst configureStore = context => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(rootReducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["applyMiddleware","createStore","compose","createWrapper","composeWithDevTools","createSagaMiddleware","rootSaga","rootReducer","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","context","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"sources":["/Users/js/Desktop/sansbook/store/configureStore.js"],"sourcesContent":["import { applyMiddleware, createStore, compose } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\nimport rootReducer from \"../reducers\";\n\nconst loggerMiddleware =\n  ({ dispatch, getState }) =>\n  (next) =>\n  (action) => {\n    console.log(action);\n    return next(action);\n  };\n\nconst configureStore = (context) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares))\n      : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(rootReducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC7D,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAOC,WAAW,MAAM,aAAa;AAErC,MAAMC,gBAAgB,GACpBA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KACtBC,IAAI,IACJC,MAAM,IAAK;EACVC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOD,IAAI,CAACC,MAAM,CAAC;AACrB,CAAC;AAEH,MAAMG,cAAc,GAAIC,OAAO,IAAK;EAClC,MAAMC,cAAc,GAAGZ,oBAAoB,EAAE;EAC7C,MAAMa,WAAW,GAAG,CAACD,cAAc,EAAET,gBAAgB,CAAC;EACtD,MAAMW,QAAQ,GACZ,QACIjB,OAAO,CAACF,eAAe,CAAC,GAAGkB,WAAW,CAAC,CAAC,GACxCd,mBAAmB,CAACJ,eAAe,CAAC,GAAGkB,WAAW,CAAC,CAAC;EAC1D,MAAME,KAAK,GAAGnB,WAAW,CAACM,WAAW,EAAEY,QAAQ,CAAC;EAChDC,KAAK,CAACC,QAAQ,GAAGJ,cAAc,CAACK,GAAG,CAAChB,QAAQ,CAAC;EAC7C,OAAOc,KAAK;AACd,CAAC;AAED,MAAMG,OAAO,GAAGpB,aAAa,CAACY,cAAc,EAAE;EAC5CS,KAAK;AACP,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}